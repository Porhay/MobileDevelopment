{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { Component } from 'react';\nvar studentsStr = \"Дмитренко Олександр - ІП-84; Матвійчук Андрій - ІВ-83; Лесик Сергій - ІО-82; Ткаченко Ярослав - ІВ-83; Аверкова Анастасія - ІО-83; Соловйов Даніїл - ІО-83; Рахуба Вероніка - ІО-81; Кочерук Давид - ІВ-83; Лихацька Юлія - ІВ-82; Головенець Руслан - ІВ-83; Ющенко Андрій - ІО-82; Мінченко Володимир - ІП-83; Мартинюк Назар - ІО-82; Базова Лідія - ІВ-81; Снігурець Олег - ІВ-81; Роман Олександр - ІО-82; Дудка Максим - ІО-81; Кулініч Віталій - ІВ-81; Жуков Михайло - ІП-83; Грабко Михайло - ІВ-81; Иванов Володимир - ІО-81; Востриков Нікіта - ІО-82; Бондаренко Максим - ІВ-83; Скрипченко Володимир - ІВ-82; Кобук Назар - ІО-81; Дровнін Павло - ІВ-83; Тарасенко Юлія - ІО-82; Дрозд Світлана - ІВ-81; Фещенко Кирил - ІО-82; Крамар Віктор - ІО-83; Иванов Дмитро - ІВ-82\";\nvar dict1 = new Map();\nvar dict2 = new Map();\nvar dict3 = new Map();\nvar dict4 = new Map();\nvar dict5 = new Map();\nvar studentsArr = studentsStr.split('; ');\nstudentsArr.map(function (elem) {\n  return dict1.set(elem.split(' - ')[1]);\n});\n\nvar randomValue = function randomValue() {\n  var lst = [];\n  var sum = 0;\n  var rvLast = Math.floor(Math.random() * Math.floor(16));\n\n  for (var i = 0; i < 7; i++) {\n    var rv = Math.floor(Math.random() * Math.floor(12));\n    lst.push(rv);\n    sum += rv;\n  }\n\n  lst.push(rvLast);\n  sum += rvLast;\n  return [lst, sum];\n};\n\nvar _loop = function _loop(key, value) {\n  var lst = [];\n  var middleMarkStudents = [];\n  var dictInner2 = new Map();\n  var dictInner3 = new Map();\n  studentsArr.forEach(function (elem) {\n    var randomValueSum = randomValue()[1];\n\n    if (elem.indexOf(key) != -1) {\n      lst.push(elem.split(\" - \")[0]);\n    }\n\n    lst.sort().forEach(function (el) {\n      dictInner2.set(el, randomValue()[0]);\n      dictInner3.set(el, randomValue()[1]);\n    });\n    var sumOfMarkforAllStundents = 0;\n    lst.sort().forEach(function (el) {\n      return sumOfMarkforAllStundents += randomValueSum;\n    });\n    var middleMarkforAllStundents = sumOfMarkforAllStundents / lst.length;\n    dict1.set(key, lst.sort());\n    dict2.set(key, dictInner2);\n    dict3.set(key, dictInner3);\n    dict4.set(key, middleMarkforAllStundents);\n    dict5.set(key, middleMarkStudents);\n  });\n};\n\nfor (var _iterator = _createForOfIteratorHelperLoose(dict1), _step; !(_step = _iterator()).done;) {\n  var _ref = _step.value;\n\n  var _ref2 = _slicedToArray(_ref, 2);\n\n  var key = _ref2[0];\n  var value = _ref2[1];\n\n  _loop(key, value);\n}\n\nconsole.log(\"\\nЗавдання 1\");\nconsole.log(dict1);\nconsole.log(\"\\nЗавдання 2\");\nconsole.log(dict2);\nconsole.log(\"\\nЗавдання 3\");\nconsole.log(dict3);\nconsole.log(\"\\nЗавдання 4\");\nconsole.log(dict4);\nconsole.log(\"\\nЗавдання 5\");\nconsole.log(dict5);\nconsole.log('\\n');\n\nvar Contents = function (_Component) {\n  _inherits(Contents, _Component);\n\n  var _super = _createSuper(Contents);\n\n  function Contents() {\n    _classCallCheck(this, Contents);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Contents, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, \" \");\n    }\n  }]);\n\n  return Contents;\n}(Component);\n\nexport default Contents;","map":{"version":3,"sources":["C:/Users/Денис/Desktop/Work/MD/MobileDevelopment/contents/contents.js"],"names":["React","Component","studentsStr","dict1","Map","dict2","dict3","dict4","dict5","studentsArr","split","map","elem","set","randomValue","lst","sum","rvLast","Math","floor","random","i","rv","push","key","value","middleMarkStudents","dictInner2","dictInner3","forEach","randomValueSum","indexOf","sort","el","sumOfMarkforAllStundents","middleMarkforAllStundents","length","console","log","Contents"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\n// Завдання 1\r\n// Заповніть словник, де:\r\n// - ключ – назва групи\r\n// - значення – відсортований масив студентів, які відносяться до відповідної групи\r\n\r\nlet studentsStr = \"Дмитренко Олександр - ІП-84; Матвійчук Андрій - ІВ-83; Лесик Сергій - ІО-82; Ткаченко Ярослав - ІВ-83; Аверкова Анастасія - ІО-83; Соловйов Даніїл - ІО-83; Рахуба Вероніка - ІО-81; Кочерук Давид - ІВ-83; Лихацька Юлія - ІВ-82; Головенець Руслан - ІВ-83; Ющенко Андрій - ІО-82; Мінченко Володимир - ІП-83; Мартинюк Назар - ІО-82; Базова Лідія - ІВ-81; Снігурець Олег - ІВ-81; Роман Олександр - ІО-82; Дудка Максим - ІО-81; Кулініч Віталій - ІВ-81; Жуков Михайло - ІП-83; Грабко Михайло - ІВ-81; Иванов Володимир - ІО-81; Востриков Нікіта - ІО-82; Бондаренко Максим - ІВ-83; Скрипченко Володимир - ІВ-82; Кобук Назар - ІО-81; Дровнін Павло - ІВ-83; Тарасенко Юлія - ІО-82; Дрозд Світлана - ІВ-81; Фещенко Кирил - ІО-82; Крамар Віктор - ІО-83; Иванов Дмитро - ІВ-82\"\r\n\r\nlet dict1 = new Map()\r\nlet dict2 = new Map()\r\nlet dict3 = new Map()\r\nlet dict4 = new Map()\r\nlet dict5 = new Map()\r\n\r\n\r\nlet studentsArr = studentsStr.split('; ')\r\n\r\nstudentsArr.map((elem) => dict1.set(elem.split(' - ')[1]))\r\n\r\nlet randomValue = () => {\r\n    let lst = []\r\n    let sum = 0\r\n    \r\n    let rvLast = Math.floor(Math.random() * Math.floor(16))\r\n\r\n    for(let i = 0; i < 7; i++) {\r\n        let rv = Math.floor(Math.random() * Math.floor(12))\r\n        lst.push(rv)\r\n        sum += rv\r\n    }\r\n\r\n    lst.push(rvLast)\r\n    sum += rvLast\r\n\r\n    return(\r\n        [lst, sum]\r\n    )\r\n}\r\n\r\n\r\nfor (let [key, value] of dict1) {\r\n    let lst = []\r\n    let middleMarkStudents = []\r\n    \r\n    let dictInner2 = new Map()\r\n    let dictInner3 = new Map()\r\n\r\n    studentsArr.forEach(elem => {\r\n        \r\n        let randomValueSum = randomValue()[1]\r\n        \r\n        if (elem.indexOf(key) != -1) {\r\n            lst.push(elem.split(\" - \")[0])\r\n        }\r\n        \r\n        lst.sort().forEach( (el) => {\r\n            dictInner2.set(el, randomValue()[0])\r\n            dictInner3.set(el, randomValue()[1])\r\n        })\r\n\r\n        // lst.sort().forEach()\r\n        \r\n\r\n        // Ex 4 \r\n        let sumOfMarkforAllStundents = 0\r\n        lst.sort().forEach(el => sumOfMarkforAllStundents += randomValueSum)\r\n        let middleMarkforAllStundents = sumOfMarkforAllStundents / lst.length\r\n\r\n        dict1.set(key, lst.sort()) \r\n        dict2.set(key, dictInner2)\r\n        dict3.set(key, dictInner3)\r\n        dict4.set(key, middleMarkforAllStundents)\r\n\r\n        // if () {\r\n        //     let student = 1\r\n        //     middleMarkStudents.push(student)\r\n        // }\r\n\r\n        dict5.set(key, middleMarkStudents)\r\n\r\n\r\n    })\r\n}\r\n\r\n\r\nconsole.log(\"\\nЗавдання 1\")\r\nconsole.log(dict1);\r\n\r\nconsole.log(\"\\nЗавдання 2\")\r\nconsole.log(dict2);\r\n\r\nconsole.log(\"\\nЗавдання 3\")\r\nconsole.log(dict3);\r\n\r\nconsole.log(\"\\nЗавдання 4\")\r\nconsole.log(dict4);\r\n\r\nconsole.log(\"\\nЗавдання 5\")\r\nconsole.log(dict5);\r\n\r\nconsole.log('\\n');\r\n\r\n\r\n// Завдання 2\r\n// - ключ – назва групи\r\n// - значення – словник, де:\r\n//   - ключ – студент, який відносяться до відповідної групи\r\n//   - значення – масив з оцінками студента (заповніть масив випадковими значеннями, використовуючи функцію `randomValue(maxValue: Int) -> Int`)\r\n\r\n\r\n// Завдання 3\r\n// Заповніть словник, де:\r\n// - ключ – назва групи\r\n// - значення – словник, де:\r\n//   - ключ – студент, який відносяться до відповідної групи\r\n//   - значення – сума оцінок студента\r\n\r\n\r\n// Завдання 4\r\n// Заповніть словник, де:\r\n// - ключ – назва групи\r\n// - значення – середня оцінка всіх студентів групи\r\n\r\n\r\n// Завдання 5\r\n// Заповніть словник, де:\r\n// - ключ – назва групи\r\n// - значення – масив студентів, які мають >= 60 балів\r\n\r\n\r\n// Приклад виведення. Ваш результат буде відрізнятися від прикладу через використання функції random для заповнення масиву оцінок та через інші вхідні дані.\r\n//\r\n//Завдання 1\r\n//[\"ІВ-73\": [\"Гончар Юрій\", \"Давиденко Костянтин\", \"Капінус Артем\", \"Науменко Павло\", \"Чередніченко Владислав\"], \"ІВ-72\": [\"Бортнік Василь\", \"Киба Олег\", \"Овчарова Юстіна\", \"Тимко Андрій\"], \"ІВ-71\": [\"Андрющенко Данило\", \"Гуменюк Олександр\", \"Корнійчук Ольга\", \"Музика Олександр\", \"Трудов Антон\", \"Феофанов Іван\"]]\r\n//\r\n//Завдання 2\r\n//[\"ІВ-73\": [\"Давиденко Костянтин\": [5, 8, 9, 12, 11, 12, 0, 0, 14], \"Капінус Артем\": [5, 8, 12, 12, 0, 12, 12, 12, 11], \"Науменко Павло\": [4, 8, 0, 12, 12, 11, 12, 12, 15], \"Чередніченко Владислав\": [5, 8, 12, 12, 11, 12, 12, 12, 15], \"Гончар Юрій\": [5, 6, 0, 12, 0, 11, 12, 11, 14]], \"ІВ-71\": [\"Корнійчук Ольга\": [0, 0, 12, 9, 11, 11, 9, 12, 15], \"Музика Олександр\": [5, 8, 12, 0, 11, 12, 0, 9, 15], \"Гуменюк Олександр\": [5, 8, 12, 9, 12, 12, 11, 12, 15], \"Трудов Антон\": [5, 0, 0, 11, 11, 0, 12, 12, 15], \"Андрющенко Данило\": [5, 6, 0, 12, 12, 12, 0, 9, 15], \"Феофанов Іван\": [5, 8, 12, 9, 12, 9, 11, 12, 14]], \"ІВ-72\": [\"Киба Олег\": [5, 8, 12, 12, 11, 12, 0, 0, 11], \"Овчарова Юстіна\": [5, 8, 12, 0, 11, 12, 12, 12, 15], \"Бортнік Василь\": [4, 8, 12, 12, 0, 12, 9, 12, 15], \"Тимко Андрій\": [0, 8, 11, 0, 12, 12, 9, 12, 15]]]\r\n//\r\n//Завдання 3\r\n//[\"ІВ-72\": [\"Бортнік Василь\": 84, \"Тимко Андрій\": 79, \"Овчарова Юстіна\": 87, \"Киба Олег\": 71], \"ІВ-73\": [\"Капінус Артем\": 84, \"Науменко Павло\": 86, \"Чередніченко Владислав\": 99, \"Гончар Юрій\": 71, \"Давиденко Костянтин\": 71], \"ІВ-71\": [\"Корнійчук Ольга\": 79, \"Трудов Антон\": 66, \"Андрющенко Данило\": 71, \"Гуменюк Олександр\": 96, \"Феофанов Іван\": 92, \"Музика Олександр\": 72]]\r\n//\r\n//Завдання 4\r\n//[\"ІВ-71\": 79.333336, \"ІВ-72\": 80.25, \"ІВ-73\": 82.2]\r\n//\r\n//Завдання 5\r\n//[\"ІВ-72\": [\"Бортнік Василь\", \"Киба Олег\", \"Овчарова Юстіна\", \"Тимко Андрій\"], \"ІВ-73\": [\"Давиденко Костянтин\", \"Капінус Артем\", \"Чередніченко Владислав\", \"Гончар Юрій\", \"Науменко Павло\"], \"ІВ-71\": [\"Музика Олександр\", \"Трудов Антон\", \"Гуменюк Олександр\", \"Феофанов Іван\", \"Андрющенко Данило\", \"Корнійчук Ольга\"]]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// new Map() // ключ – студент, значення – [оцінки]\r\n\r\n\r\n// Дмитренко Олександр - ІП-84; Матвійчук Андрій - ІВ-83; Лесик Сергій - ІО-82;\r\n// studentsArr.map((elem) => {\r\n//     let group = elem.split(' - ')[1]\r\n//     let student = elem.split(' - ')[0]\r\n//     if (!dict1.has(group)){\r\n//         dict1.set(group)\r\n//     }\r\n// })\r\n\r\n\r\n// for (let [key, value] of dict1) {\r\n//     let lst = []\r\n//     let dictInner = new Map()\r\n//     studentsArr.forEach(elem => {\r\n//         if (elem.indexOf(key) != -1) {\r\n//             lst.push(elem.split(\" - \")[0])\r\n//         }\r\n//         dictInner.set(...lst.sort(), 1)\r\n//         dict1.set(key, dictInner)\r\n        \r\n//     })\r\n// }\r\n\r\n\r\n\r\n// let bigDict = []\r\n\r\n// for(let i = 0; i < dict.size; i++) {\r\n//     // console.log([...dict.values()][i]);\r\n//     bigDict.push([...dict.values()][i])\r\n// }\r\n\r\n\r\n// for (let i = 0; i < dict.size; i++) {\r\n//     for (let j = 0; j < [...dict.values()][i].length; j++) {\r\n//         let a = studentsArr.map(elem => elem.split(' - '))\r\n//         if (a[1][j] === [...dict1.keys()][i]) {\r\n//             dict1Inner.set(a[0])[j]\r\n            \r\n//         }\r\n        \r\n//     }\r\n\r\n// }\r\n\r\n\r\n// for (let [key, value] of dict1) {\r\n//     dict1.set(key, dict1Inner)\r\n// }\r\n\r\n// // console.log(bigDict);\r\n// // console.log(dict1);\r\n\r\n\r\n\r\n// // for (let [key, value] of dict1) {\r\n// //     let lst1 = []\r\n// //     studentsArr.forEach(elem => {\r\n// //         if (elem.indexOf(key) != -1) {\r\n// //             lst1.push(elem.split(\" - \")[0])\r\n// //         }\r\n// //         dict1.set(key, dict1Inner.set(lst1))\r\n// //     })\r\n\r\n    \r\n// // }\r\n\r\n\r\n\r\n\r\n\r\nclass Contents extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <> </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contents;"]},"metadata":{},"sourceType":"module"}